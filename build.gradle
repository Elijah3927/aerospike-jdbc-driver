ext.junitJupiterVersion  = '5.0.0-M4'


apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
version = '1.0-SNAPSHOT'

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

repositories {
    if (project.hasProperty("local_repository") || System.getProperty("local_repository") != null) {
        mavenLocal()
    } else {
        mavenCentral()
    }
}

dependencies {
    compile group: 'com.github.jsqlparser', name: 'jsqlparser', version: '1.4'
    compile group: 'com.aerospike', name: 'aerospike-client', version: '4.3.1'
    compile 'com.jason-goodwin:better-monads:0.4.0'

    // It is not used right now but will be definitely used in future. 
    //testCompile group: 'org.mockito', name: 'mockito-core', version: '3.0.0'

    testCompileOnly(
            'junit:junit:4.12'
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testCompile("org.junit.jupiter:junit-jupiter-params:5.3.2")
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0'
    )
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'JDBC driver for Aerospike',
                'Implementation-Version': version
                //'Main-Class': 'com.nosqldriver.aerospike.sql.AerospikeDriverMain'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


test {
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
